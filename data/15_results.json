{
  "info": {
    "id": 15,
    "qanaryEval": {
      "gpr": 0.808,
      "grc": 0.024962,
      "gfm": 0.020407
    }
  },
  "data": [
    {
      "QuestionID": 1,
      "QuestionString": "What is the revenue of IBM?",
      "ResourceURLs": "http://dbpedia.org/resource/IBM, ",
      "PropertyURLs": "http://dbpedia.org/ontology/revenue, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/IBM>   <http://dbpedia.org/ontology/revenue>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 1
    },
    {
      "QuestionID": 4,
      "QuestionString": "Which airports are located in California, USA?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/locationCity, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/locationCity>   ?p   ?v0.  }, ",
      "NrExpected": 208,
      "NrSystem": 24,
      "NrCorrect": 0
    },
    {
      "QuestionID": 6,
      "QuestionString": "Are Taiko some kind of Japanese musical instrument?",
      "ResourceURLs": "http://dbpedia.org/resource/Taiko, ",
      "PropertyURLs": "http://dbpedia.org/ontology/instrument, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Taiko>   <http://dbpedia.org/ontology/instrument>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 7,
      "QuestionString": "Give me all cars that are produced in Germany.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "http://dbpedia.org/ontology/producer, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Automobile, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Give_In_to_Me>   <http://dbpedia.org/ontology/producer>   ?v0.  }, ",
      "NrExpected": 482,
      "NrSystem": 2,
      "NrCorrect": 0
    },
    {
      "QuestionID": 8,
      "QuestionString": "Who founded Intel?",
      "ResourceURLs": "http://dbpedia.org/resource/Intel, ",
      "PropertyURLs": "http://dbpedia.org/ontology/founder, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Intel>   <http://dbpedia.org/ontology/founder>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 9,
      "QuestionString": "In which city is the headquarter of Air China?",
      "ResourceURLs": "http://dbpedia.org/resource/Air_China, ",
      "PropertyURLs": "http://dbpedia.org/ontology/headquarter, ",
      "OntologyURLs": "http://dbpedia.org/ontology/City, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Air_China>   <http://dbpedia.org/ontology/headquarter>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 3,
      "NrCorrect": 1
    },
    {
      "QuestionID": 10,
      "QuestionString": "How many students does the Free University of Amsterdam have?",
      "ResourceURLs": "http://dbpedia.org/resource/Vrije_Universiteit_Amsterdam, http://dbpedia.org/resource/University_of_Amsterdam, ",
      "PropertyURLs": "http://dbpedia.org/ontology/doctoralStudent, http://dbpedia.org/ontology/institution, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 13,
      "QuestionString": "Which politicians were married to a German?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Politician, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/spouse>   ?p   ?v0.  }, ",
      "NrExpected": 11,
      "NrSystem": 32,
      "NrCorrect": 0
    },
    {
      "QuestionID": 14,
      "QuestionString": "Show me hiking trails in the Grand Canyon where there's no danger of flash floods.",
      "ResourceURLs": "http://dbpedia.org/resource/Grand_Canyon, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/ShoppingMall, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 15,
      "QuestionString": "How short is the shortest active NBA player?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 19,
      "QuestionString": "Who became president after JFK died?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/President, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 20,
      "QuestionString": "How many calories does a baguette have?",
      "ResourceURLs": "http://dbpedia.org/resource/Baguette, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 21,
      "QuestionString": "Who created English Wikipedia?",
      "ResourceURLs": "http://dbpedia.org/resource/English_Wikipedia, ",
      "PropertyURLs": "http://dbpedia.org/ontology/creator, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/English_Wikipedia>   <http://dbpedia.org/ontology/creator>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 22,
      "QuestionString": "How many grand-children did Jacques Cousteau have?",
      "ResourceURLs": "http://dbpedia.org/resource/Jacques_Cousteau, ",
      "PropertyURLs": "http://dbpedia.org/ontology/managerClub, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Jacques_Cousteau>   <http://dbpedia.org/ontology/managerClub>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 23,
      "QuestionString": "Which software has been published by Mean Hamster Software?",
      "ResourceURLs": "http://dbpedia.org/resource/Mean_Hamster_Software, ",
      "PropertyURLs": "http://dbpedia.org/ontology/publisher, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Software, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/publisher>   <http://dbpedia.org/resource/Mean_Hamster_Software>.  }, ",
      "NrExpected": 2,
      "NrSystem": 2,
      "NrCorrect": 2
    },
    {
      "QuestionID": 24,
      "QuestionString": "How many emperors did China have?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 25,
      "QuestionString": "What is the longest river in China?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/riverMouth, ",
      "OntologyURLs": "http://dbpedia.org/ontology/River, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/riverMouth>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 22,
      "NrCorrect": 0
    },
    {
      "QuestionID": 26,
      "QuestionString": "What is the atmosphere of the Moon composed of?",
      "ResourceURLs": "http://dbpedia.org/resource/Atmosphere_of_the_Moon, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 7,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 27,
      "QuestionString": "Which rivers flow into the North Sea?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/River, ",
      "SPARQLQuery": "",
      "NrExpected": 17,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 29,
      "QuestionString": "Which countries in the European Union adopted the Euro?",
      "ResourceURLs": "http://dbpedia.org/resource/European_Union, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 45,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 31,
      "QuestionString": "Who is the mayor of Berlin?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/leaderName, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/leaderName>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 24,
      "NrCorrect": 0
    },
    {
      "QuestionID": 32,
      "QuestionString": "What is Angela Merkelï¿½s birth name?",
      "ResourceURLs": "http://dbpedia.org/resource/Angela_Merkel, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 34,
      "QuestionString": "Give me all female German chancellors.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 37,
      "QuestionString": "What are the nicknames of San Francisco?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 38,
      "QuestionString": "Give me all Frisian islands that belong to the Netherlands.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Netherlands, ",
      "PropertyURLs": "http://dbpedia.org/ontology/division, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Give_In_to_Me>   <http://dbpedia.org/ontology/division>   <http://dbpedia.org/resource/Netherlands>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 39,
      "QuestionString": "Which poet wrote the most books?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, http://dbpedia.org/ontology/Poem, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/writer>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 26,
      "NrCorrect": 0
    },
    {
      "QuestionID": 40,
      "QuestionString": "Who were the parents of Queen Victoria?",
      "ResourceURLs": "http://dbpedia.org/resource/Queen_Victoria, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 42,
      "QuestionString": "Which countries have places with more than two caves?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Cave, http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/writer>   ?p   ?v0.  }, ",
      "NrExpected": 26,
      "NrSystem": 26,
      "NrCorrect": 0
    },
    {
      "QuestionID": 43,
      "QuestionString": "Give me the websites of companies with more than 500000 employees.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, http://dbpedia.org/ontology/Employer, http://dbpedia.org/ontology/Website, ",
      "SPARQLQuery": "",
      "NrExpected": 43,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 44,
      "QuestionString": "Which European countries have a constitutional monarchy?",
      "ResourceURLs": "http://dbpedia.org/resource/Constitutional_monarchy, ",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/writer>   ?v1.   { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://purl.org/linguistics/gold/hypernym>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://dbpedia.org/ontology/wikiPageWikiLink>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://xmlns.com/foaf/0.1/isPrimaryTopicOf>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://www.w3.org/2000/01/rdf-schema#seeAlso>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://www.w3.org/2002/07/owl#sameAs>  ?v0.  } UNION  { <http://dbpedia.org/resource/Constitutional_monarchy>  <http://purl.org/dc/terms/subject>  ?v0.  }   }, ",
      "NrExpected": 4,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 45,
      "QuestionString": "Where did Abraham Lincoln die?",
      "ResourceURLs": "http://dbpedia.org/resource/Abraham_Lincoln, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 49,
      "QuestionString": "Which frequent flyer program has the most airlines?",
      "ResourceURLs": "http://dbpedia.org/resource/Frequent-flyer_program, ",
      "PropertyURLs": "http://dbpedia.org/ontology/college, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/college>   ?v1.   { ?v0  <http://dbpedia.org/ontology/product>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/programmeFormat>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/cpu>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/servingRailwayLine>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/lounge>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/deathCause>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/brand>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/literaryGenre>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/gameEngine>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/movement>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/majorShrine>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/significantProject>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/winsAtLPGA>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/selection>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/nonFictionSubject>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/education>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/mediaType>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/artist>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/grades>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/alliance>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/computingPlatform>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/programmingLanguage>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/honours>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/archipelago>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/promotion>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/currentProduction>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/railwayRollingStock>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/board>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/service>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/operatingSystem>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/license>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/portrayer>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/lastAppearance>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/philosophicalSchool>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/winsAtOtherTournaments>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/show>  <http://dbpedia.org/resource/Frequent-flyer_program>.  } UNION  { ?v0  <http://dbpedia.org/ontology/academicDiscipline>  <http://dbpedia.org/resource/Frequent-flyer_program>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 50,
      "QuestionString": "What is the highest volcano in Africa?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Volcano, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 51,
      "QuestionString": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?",
      "ResourceURLs": "http://dbpedia.org/resource/Netherlands, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 52,
      "QuestionString": "Give me all movies with Tom Cruise.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Tom_Cruise, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "select * where {    { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/product>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/athletics>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/programmeFormat>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/campus>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/lounge>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/citizenship>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/deathCause>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/season>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/movement>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/majorShrine>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/mainOrgan>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/significantProject>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/significantDesign>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/winsAtLPGA>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/selection>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/internationalAffiliation>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/youthWing>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/education>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/legalForm>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/grades>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/alliance>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/pictureFormat>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/militaryRank>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/notableWork>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/bodyDiscovered>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/honours>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/schoolBoard>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/nationalAffiliation>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/board>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/service>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/portrayer>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/lastAppearance>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/teachingStaff>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/philosophicalSchool>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/winsAtOtherTournaments>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Tom_Cruise>  <http://dbpedia.org/ontology/march>  <http://dbpedia.org/resource/Give_In_to_Me>.  }   }, ",
      "NrExpected": 26,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 56,
      "QuestionString": "How many seats does the home stadium of FC Porto have?",
      "ResourceURLs": "http://dbpedia.org/resource/FC_Porto, ",
      "PropertyURLs": "http://dbpedia.org/ontology/seatingCapacity, http://dbpedia.org/ontology/homeStadium, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/FC_Porto>   <http://dbpedia.org/ontology/seatingCapacity>   ?l0.    <http://dbpedia.org/resource/FC_Porto>   <http://dbpedia.org/ontology/homeStadium>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 59,
      "QuestionString": "Which space probes were sent into orbit around the sun?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 19,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 60,
      "QuestionString": "Who is the governor of Texas?",
      "ResourceURLs": "http://dbpedia.org/resource/Governor_of_Texas, ",
      "PropertyURLs": "http://dbpedia.org/ontology/governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Governor_of_Texas>   <http://dbpedia.org/ontology/governor>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 62,
      "QuestionString": "What is the highest place of Karakoram?",
      "ResourceURLs": "http://dbpedia.org/resource/Karakoram, ",
      "PropertyURLs": "http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/birthPlace>   <http://dbpedia.org/resource/Karakoram>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 63,
      "QuestionString": "Who was called Scarface?",
      "ResourceURLs": "http://dbpedia.org/resource/Scarface_(rapper), ",
      "PropertyURLs": "http://dbpedia.org/ontology/nickname, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 64,
      "QuestionString": "What is the profession of Frank Herbert?",
      "ResourceURLs": "http://dbpedia.org/resource/Frank_Herbert, ",
      "PropertyURLs": "http://dbpedia.org/ontology/profession, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Frank_Herbert>   <http://dbpedia.org/ontology/profession>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 66,
      "QuestionString": "Which artists were born on the same date as Rachel Stevens?",
      "ResourceURLs": "http://dbpedia.org/resource/Rachel_Stevens, ",
      "PropertyURLs": "http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Artist, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Rachel_Stevens>   <http://dbpedia.org/ontology/birthPlace>   ?v0.  }, ",
      "NrExpected": 3,
      "NrSystem": 2,
      "NrCorrect": 0
    },
    {
      "QuestionID": 68,
      "QuestionString": "Which country was Bill Gates born in?",
      "ResourceURLs": "http://dbpedia.org/resource/Bill_Gates, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 71,
      "QuestionString": "Give me all spacecrafts that flew to Mars.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Spacecraft, ",
      "SPARQLQuery": "",
      "NrExpected": 15,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 73,
      "QuestionString": "How many gold medals did Michael Phelps win at the 2008 Olympics?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Phelps, http://dbpedia.org/resource/2008_Summer_Olympics, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Michael_Phelps>    <http://dbpedia.org/ontology/wikiPageWikiLink>    <http://dbpedia.org/resource/2008_Summer_Olympics>.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 78,
      "QuestionString": "When was the De Beers company founded?",
      "ResourceURLs": "http://dbpedia.org/resource/De_Beers, ",
      "PropertyURLs": "http://dbpedia.org/ontology/founder, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/De_Beers>   <http://dbpedia.org/ontology/founder>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 79,
      "QuestionString": "Are there any castles in the United States?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 80,
      "QuestionString": "Give me a list of all critically endangered birds.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Endangered_species, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/List, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Endangered_species>    <http://dbpedia.org/ontology/album>    <http://dbpedia.org/resource/Give_In_to_Me>.  }, ",
      "NrExpected": 198,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 81,
      "QuestionString": "Butch Otter is the governor of which U.S. state?",
      "ResourceURLs": "http://dbpedia.org/resource/Butch_Otter, http://dbpedia.org/resource/U.S._state, ",
      "PropertyURLs": "http://dbpedia.org/ontology/governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Butch_Otter>   <http://dbpedia.org/ontology/governor>   <http://dbpedia.org/resource/U.S._state>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 82,
      "QuestionString": "When was Jack Wolfskin founded?",
      "ResourceURLs": "http://dbpedia.org/resource/Jack_Wolfskin, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Jack_Wolfskin>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 122,
      "NrCorrect": 0
    },
    {
      "QuestionID": 83,
      "QuestionString": "Give me all gangsters from the prohibition era.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 22,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 84,
      "QuestionString": "Which American presidents were in office during the Vietnam War?",
      "ResourceURLs": "http://dbpedia.org/resource/Vietnam_War, ",
      "PropertyURLs": "http://dbpedia.org/ontology/battle, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Vietnam_War>   <http://dbpedia.org/ontology/battle>   ?v0.  }, ",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 86,
      "QuestionString": "What is the highest mountain in Germany?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/mouthMountain, ",
      "OntologyURLs": "http://dbpedia.org/ontology/MountainRange, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/mouthMountain>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 16,
      "NrCorrect": 0
    },
    {
      "QuestionID": 87,
      "QuestionString": "Which book has the most pages?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/college, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/college>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 24,
      "NrCorrect": 0
    },
    {
      "QuestionID": 88,
      "QuestionString": "What is the wavelength of Indigo?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 92,
      "QuestionString": "Is the wife of President Obama called Michelle?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/nickname, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/nickname>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 94,
      "QuestionString": "When did princess Diana die?",
      "ResourceURLs": "http://dbpedia.org/resource/Wonder_Woman, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 95,
      "QuestionString": "Who is the youngest player in the Premier League?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Play, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 96,
      "QuestionString": "Which professional surfers were born on the Philippines?",
      "ResourceURLs": "http://dbpedia.org/resource/Philippines, ",
      "PropertyURLs": "http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Philippines>   <http://dbpedia.org/ontology/birthPlace>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 97,
      "QuestionString": "Give me the official websites of actors of the television show Charmed.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Charmed, ",
      "PropertyURLs": "http://dbpedia.org/ontology/starring, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Give_In_to_Me>   <http://dbpedia.org/ontology/starring>   ?v0.   { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/artist>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/endingTheme>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/openingTheme>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/cpu>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/computingPlatform>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/programmingLanguage>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/premierePlace>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/literaryGenre>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/gameEngine>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/basedOn>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/operatingSystem>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/license>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/subsequentWork>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/nonFictionSubject>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/sisterNewspaper>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/mediaType>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/show>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/previousWork>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Charmed>  <http://dbpedia.org/ontology/academicDiscipline>  <http://dbpedia.org/resource/Give_In_to_Me>.  }   }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 98,
      "QuestionString": "Who killed Caesar?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 9,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 99,
      "QuestionString": "What is the time zone of Salt Lake City?",
      "ResourceURLs": "http://dbpedia.org/resource/Bidhannagar, ",
      "PropertyURLs": "http://dbpedia.org/ontology/timeZone, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Bidhannagar>   <http://dbpedia.org/ontology/timeZone>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 101,
      "QuestionString": "How many companies were founded by the founder of Facebook?",
      "ResourceURLs": "http://dbpedia.org/resource/Facebook, ",
      "PropertyURLs": "http://dbpedia.org/ontology/founder, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Facebook>   <http://dbpedia.org/ontology/founder>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 102,
      "QuestionString": "When did Dracula's creator die?",
      "ResourceURLs": "http://dbpedia.org/resource/Dracula_(1958_film), ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Dracula_(1958_film)>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 215,
      "NrCorrect": 0
    },
    {
      "QuestionID": 103,
      "QuestionString": "Where does Piccadilly start?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 104,
      "QuestionString": "Who is the daughter of Robert Kennedy married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Robert_F._Kennedy, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 105,
      "QuestionString": "Which countries have more than ten volcanoes?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/writer>   ?p   ?v0.  }, ",
      "NrExpected": 13,
      "NrSystem": 26,
      "NrCorrect": 0
    },
    {
      "QuestionID": 107,
      "QuestionString": "Who was the father of Queen Elizabeth II?",
      "ResourceURLs": "http://dbpedia.org/resource/Elizabeth_II, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 108,
      "QuestionString": "When did Paraguay proclaim its independence?",
      "ResourceURLs": "http://dbpedia.org/resource/Paraguay, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 110,
      "QuestionString": "Which movies did Kurosawa direct?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "",
      "NrExpected": 32,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 111,
      "QuestionString": "How many awards has Bertrand Russell?",
      "ResourceURLs": "http://dbpedia.org/resource/Bertrand_Russell, ",
      "PropertyURLs": "http://dbpedia.org/ontology/award, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Bertrand_Russell>   <http://dbpedia.org/ontology/award>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 113,
      "QuestionString": "Which German cities have more than 250000 inhabitants?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/writer>   ?p   ?v0.  }, ",
      "NrExpected": 26,
      "NrSystem": 26,
      "NrCorrect": 0
    },
    {
      "QuestionID": 114,
      "QuestionString": "How big is the earth's diameter?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/language, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/language>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 34,
      "NrCorrect": 0
    },
    {
      "QuestionID": 115,
      "QuestionString": "How many rivers and lakes are in South Carolina?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 116,
      "QuestionString": "Who was called Rodzilla?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/nickname, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/nickname>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 117,
      "QuestionString": "Is Pamela Anderson a vegan?",
      "ResourceURLs": "http://dbpedia.org/resource/Pamela_Anderson, http://dbpedia.org/resource/Veganism, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 119,
      "QuestionString": "Which instruments does Cat Stevens play?",
      "ResourceURLs": "http://dbpedia.org/resource/Cat_Stevens, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Instrument, ",
      "SPARQLQuery": "",
      "NrExpected": 10,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 120,
      "QuestionString": "Who is the daughter of Bill Clinton married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Bill_Clinton, ",
      "PropertyURLs": "http://dbpedia.org/ontology/owningCompany, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Bill_Clinton>   <http://dbpedia.org/ontology/owningCompany>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 122,
      "QuestionString": "Who was the wife of President Lincoln?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/spouse>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 32,
      "NrCorrect": 0
    },
    {
      "QuestionID": 123,
      "QuestionString": "Give me all animals that are extinct.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Animal, ",
      "SPARQLQuery": "",
      "NrExpected": 915,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 124,
      "QuestionString": "When was Carlo Giuliani shot?",
      "ResourceURLs": "http://dbpedia.org/resource/Death_of_Carlo_Giuliani, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Death_of_Carlo_Giuliani>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 143,
      "NrCorrect": 0
    },
    {
      "QuestionID": 125,
      "QuestionString": "How many years was the Ford Model T manufactured?",
      "ResourceURLs": "http://dbpedia.org/resource/Ford_Model_T, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 126,
      "QuestionString": "Sean Parnell was the governor of which U.S. state?",
      "ResourceURLs": "http://dbpedia.org/resource/Sean_Parnell, http://dbpedia.org/resource/U.S._state, ",
      "PropertyURLs": "http://dbpedia.org/ontology/governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Sean_Parnell>   <http://dbpedia.org/ontology/governor>   <http://dbpedia.org/resource/U.S._state>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 128,
      "QuestionString": "Who is the author of WikiLeaks?",
      "ResourceURLs": "http://dbpedia.org/resource/WikiLeaks, ",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/WikiLeaks>   <http://dbpedia.org/ontology/writer>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 129,
      "QuestionString": "Who does the voice of Bart Simpson?",
      "ResourceURLs": "http://dbpedia.org/resource/Bart_Simpson, ",
      "PropertyURLs": "http://dbpedia.org/ontology/voice, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/voice>   <http://dbpedia.org/resource/Bart_Simpson>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 131,
      "QuestionString": "What languages are spoken in Pakistan?",
      "ResourceURLs": "http://dbpedia.org/resource/Pakistan, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spokenIn, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Language, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/spokenIn>   <http://dbpedia.org/resource/Pakistan>.  }, ",
      "NrExpected": 16,
      "NrSystem": 52,
      "NrCorrect": 9
    },
    {
      "QuestionID": 132,
      "QuestionString": "What is Elon Musk famous for?",
      "ResourceURLs": "http://dbpedia.org/resource/Elon_Musk, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 6,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 133,
      "QuestionString": "What are the names of the Teenage Mutant Ninja Turtles?",
      "ResourceURLs": "http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles_(1987_TV_series), ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 4,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 134,
      "QuestionString": "What is Batman's real name?",
      "ResourceURLs": "http://dbpedia.org/resource/Batman_(TV_series), ",
      "PropertyURLs": "http://dbpedia.org/ontology/binomialAuthority, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/binomialAuthority>   <http://dbpedia.org/resource/Batman_(TV_series)>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 135,
      "QuestionString": "When did Michael Jackson die?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Jackson, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 136,
      "QuestionString": "How many moons does Mars have?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 137,
      "QuestionString": "Give me all Dutch parties.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 11,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 138,
      "QuestionString": "Give me the capitals of all countries in Africa.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Capital, ",
      "SPARQLQuery": "",
      "NrExpected": 59,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 139,
      "QuestionString": "Which professional surfers were born in Australia?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 140,
      "QuestionString": "How many scientists graduated from an Ivy League university?",
      "ResourceURLs": "http://dbpedia.org/resource/Ivy_League, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 141,
      "QuestionString": "Which languages are spoken in Estonia?",
      "ResourceURLs": "http://dbpedia.org/resource/Estonia, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Language, ",
      "SPARQLQuery": "",
      "NrExpected": 8,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 143,
      "QuestionString": "What is the area code of Berlin?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/areaCode, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/areaCode>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 32,
      "NrCorrect": 0
    },
    {
      "QuestionID": 144,
      "QuestionString": "Whom did Lance Bass marry?",
      "ResourceURLs": "http://dbpedia.org/resource/Lance_Bass, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Lance_Bass>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 492,
      "NrCorrect": 0
    },
    {
      "QuestionID": 145,
      "QuestionString": "Who owns Aldi?",
      "ResourceURLs": "http://dbpedia.org/resource/Aldi, ",
      "PropertyURLs": "http://dbpedia.org/ontology/owner, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Aldi>   <http://dbpedia.org/ontology/owner>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 148,
      "QuestionString": "What is the largest state in the United States?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/state, ",
      "OntologyURLs": "http://dbpedia.org/ontology/State, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/state>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 22,
      "NrCorrect": 0
    },
    {
      "QuestionID": 149,
      "QuestionString": "Which U.S. state has the highest population density?",
      "ResourceURLs": "http://dbpedia.org/resource/U.S._state, http://dbpedia.org/resource/Population_density, ",
      "PropertyURLs": "http://dbpedia.org/ontology/college, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Population, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/U.S._state>   <http://dbpedia.org/ontology/college>   ?v0.   { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/director>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/editor>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/location>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/secondLeader>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/lounge>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/league>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/owner>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/region>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/developer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/governor>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/associatedMusicalArtist>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/producer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/sourceMountain>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/primeMinister>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/appointer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/foundedBy>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/owningOrganisation>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/chairman>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/vicePresident>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/managementMountain>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/monarch>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/leader>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/alliance>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/lieutenant>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/part>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/firstLeader>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/commander>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/president>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/keyPerson>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/chancellor>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/service>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/executiveProducer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/company>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/viceChancellor>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/parentCompany>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/composer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/subsidiary>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/owningCompany>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/designer>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/distributor>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/distributingCompany>  <http://dbpedia.org/resource/U.S._state>.  } UNION  { <http://dbpedia.org/resource/Population_density>  <http://dbpedia.org/ontology/manufacturer>  <http://dbpedia.org/resource/U.S._state>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 150,
      "QuestionString": "In which city was the president of Montenegro born?",
      "ResourceURLs": "http://dbpedia.org/resource/President_of_Montenegro, ",
      "PropertyURLs": "http://dbpedia.org/ontology/president, ",
      "OntologyURLs": "http://dbpedia.org/ontology/City, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/President_of_Montenegro>   <http://dbpedia.org/ontology/president>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 151,
      "QuestionString": "Give me all B-sides of the Ramones.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Ramones, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {    { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/product>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/athletics>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/programmeFormat>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/campus>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/lounge>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/citizenship>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/deathCause>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/season>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/movement>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/majorShrine>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/mainOrgan>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/significantProject>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/significantDesign>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/winsAtLPGA>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/selection>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/internationalAffiliation>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/youthWing>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/education>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/legalForm>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/grades>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/alliance>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/pictureFormat>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/militaryRank>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/notableWork>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/bodyDiscovered>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/honours>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/schoolBoard>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/nationalAffiliation>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/board>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/service>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/portrayer>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/lastAppearance>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/teachingStaff>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/philosophicalSchool>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/winsAtOtherTournaments>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Ramones>  <http://dbpedia.org/ontology/march>  <http://dbpedia.org/resource/Give_In_to_Me>.  }   }, ",
      "NrExpected": 11,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 152,
      "QuestionString": "Which beer brewing companies are located in North-Rhine Westphalia?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Beer, ",
      "SPARQLQuery": "",
      "NrExpected": 4,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 154,
      "QuestionString": "Which books were written by Danielle Steel?",
      "ResourceURLs": "http://dbpedia.org/resource/Danielle_Steel, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Danielle_Steel>   ?p   ?v0.  }, ",
      "NrExpected": 47,
      "NrSystem": 313,
      "NrCorrect": 0
    },
    {
      "QuestionID": 155,
      "QuestionString": "What is the nick name of Baghdad?",
      "ResourceURLs": "http://dbpedia.org/resource/Baghdad, ",
      "PropertyURLs": "http://dbpedia.org/ontology/nickname, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 156,
      "QuestionString": "Where is Fort Knox located?",
      "ResourceURLs": "http://dbpedia.org/resource/Fort_Knox, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 157,
      "QuestionString": "Give me English actors starring in Lovesick.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 158,
      "QuestionString": "Give me all writers that won the Nobel Prize in literature.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Nobel_Prize_in_Literature, ",
      "PropertyURLs": "http://dbpedia.org/ontology/award, ",
      "OntologyURLs": "http://dbpedia.org/ontology/PeriodicalLiterature, http://dbpedia.org/ontology/Writer, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/award>   <http://dbpedia.org/resource/Nobel_Prize_in_Literature>.    <http://dbpedia.org/resource/Nobel_Prize_in_Literature>    <http://dbpedia.org/ontology/album>    <http://dbpedia.org/resource/Give_In_to_Me>.  }, ",
      "NrExpected": 21,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 159,
      "QuestionString": "Which countries are connected by the Rhine?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 6,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 160,
      "QuestionString": "Who wrote Harry Potter?",
      "ResourceURLs": "http://dbpedia.org/resource/Harry_Potter, ",
      "PropertyURLs": "http://dbpedia.org/ontology/writer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Harry_Potter>   <http://dbpedia.org/ontology/writer>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 162,
      "QuestionString": "How deep is Lake Chiemsee?",
      "ResourceURLs": "http://dbpedia.org/resource/Chiemsee, http://dbpedia.org/resource/Chiemsee, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {    { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mountainRange>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/highestPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sheading>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/meetingRoad>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/highestMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/rightChild>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/leftTributary>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/routeEndLocation>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/twinCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/border>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthState>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capitalCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/federalState>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/region>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/constructionMaterial>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/river>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/unitaryAuthority>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/administrativeDistrict>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/originalStartPoint>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lowestMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourcePlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluenceCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/highestRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capitalDistrict>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/spurOf>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lessPopulousCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lowestPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/structuralSystem>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/commune>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/riverMouth>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/homeArena>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/governmentPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/largestCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/department>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/parish>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/endPoint>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/addressInRoad>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/intercommunality>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/municipality>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/governmentCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/majorIsland>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/nearestCity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/varietals>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/location>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/richestCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/routeStart>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/map>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/railwayLineUsingTunnel>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/largestSettlement>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/inflow>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/largestCity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lowestState>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/locationCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluence>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/timeZone>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capital>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/managementMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/beltwayCity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/routeEnd>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/countySeat>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/rightTributary>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/part>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capitalPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/state>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/associationOfLocalGovernment>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/routeStartLocation>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/nrhpType>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluenceRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsSubsection>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mostPopulatedCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/subregion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/waterwayThroughTunnel>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/governmentRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/largestMetro>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/servingRailwayLine>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/locatedInArea>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/managementRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/leftChild>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lessPopulatedCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/poorestCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capitalRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/crosses>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/province>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/frazioni>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/county>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/previousInfrastructure>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluenceMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/homeStadium>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluenceState>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/origin>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/arrondissement>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/congressionalDistrict>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/managementPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/twinCity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/canton>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lieutenancyArea>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/highwaySystem>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsSection>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/councilArea>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/capitalMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/hasJunctionWith>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/building>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthDistrict>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/parentMountainPeak>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/routeJunction>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/island>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsMajorSector>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/maintainedBy>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/lowestRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/areaOfSearch>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceConfluencePlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/riverBranch>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsMainPart>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/availableSmartCard>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/government>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/outflow>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/smallestCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/principalArea>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/district>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsSubgroup>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsSupergroup>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/managementCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/ruralMunicipality>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/sourceCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/daylightSavingTimeZone>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/borough>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/city>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/metropolitanBorough>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/jointCommunity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/archipelago>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/administrativeCollectivity>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/wineProduced>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/typeOfElectrification>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/highestState>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/originalEndPoint>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/governmentMountain>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/ceremonialCounty>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/railwayRollingStock>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mouthPlace>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/leaderParty>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/alpsGroup>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/nisCode>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/neighboringMunicipality>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/mostPopulousCountry>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/startPoint>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/subsequentInfrastructure>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/country>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/isPartOfWineRegion>  <http://dbpedia.org/resource/Chiemsee>.  } UNION  { <http://dbpedia.org/resource/Chiemsee>  <http://dbpedia.org/ontology/riverBranchOf>  <http://dbpedia.org/resource/Chiemsee>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 163,
      "QuestionString": "Give me all chemical elements.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/ChemicalElement, ",
      "SPARQLQuery": "",
      "NrExpected": 119,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 164,
      "QuestionString": "Who was on the Apollo 11 mission?",
      "ResourceURLs": "http://dbpedia.org/resource/Apollo_11, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 165,
      "QuestionString": "What is the name of the university where Obama's wife studied?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/binomialAuthority, ",
      "OntologyURLs": "http://dbpedia.org/ontology/University, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/binomialAuthority>   ?p   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 16,
      "NrCorrect": 0
    },
    {
      "QuestionID": 166,
      "QuestionString": "Which computer scientist won an oscar?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 167,
      "QuestionString": "Which subsidiary of TUI Travel serves both Glasgow and Dublin?",
      "ResourceURLs": "http://dbpedia.org/resource/TUI_Travel, http://dbpedia.org/resource/Glasgow, http://dbpedia.org/resource/Dublin, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 168,
      "QuestionString": "Which actors play in Big Bang Theory?",
      "ResourceURLs": "http://dbpedia.org/resource/The_Big_Bang_Theory, ",
      "PropertyURLs": "http://dbpedia.org/ontology/starring, http://dbpedia.org/ontology/instrument, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Actor, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/The_Big_Bang_Theory>   <http://dbpedia.org/ontology/starring>   ?v0.    ?v0   <http://dbpedia.org/ontology/instrument>   ?v1.  }, ",
      "NrExpected": 10,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 169,
      "QuestionString": "Give me all libraries established before 1400.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Library, ",
      "SPARQLQuery": "",
      "NrExpected": 12,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 171,
      "QuestionString": "When did the Boston Tea Party take place?",
      "ResourceURLs": "http://dbpedia.org/resource/Boston_Tea_Party, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 173,
      "QuestionString": "When did Finland join the EU?",
      "ResourceURLs": "http://dbpedia.org/resource/Finland, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 174,
      "QuestionString": "Who is the novelist of the work a song of ice and fire?",
      "ResourceURLs": "http://dbpedia.org/resource/A_Song_of_Ice_and_Fire, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Work, http://dbpedia.org/ontology/Song, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 175,
      "QuestionString": "When did Muhammad die?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 176,
      "QuestionString": "Who painted The Storm on the Sea of Galilee?",
      "ResourceURLs": "http://dbpedia.org/resource/The_Storm_on_the_Sea_of_Galilee, ",
      "PropertyURLs": "http://dbpedia.org/ontology/creator, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/The_Storm_on_the_Sea_of_Galilee>   <http://dbpedia.org/ontology/creator>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 177,
      "QuestionString": "Which bridges are of the same type as the Manhattan Bridge?",
      "ResourceURLs": "http://dbpedia.org/resource/Manhattan_Bridge, ",
      "PropertyURLs": "http://dbpedia.org/ontology/type, http://dbpedia.org/ontology/crosses, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Bridge, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Manhattan_Bridge>   <http://dbpedia.org/ontology/type>   ?v0.    <http://dbpedia.org/resource/Manhattan_Bridge>   <http://dbpedia.org/ontology/crosses>   ?v0.  }, ",
      "NrExpected": 160,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 178,
      "QuestionString": "How many James Bond movies do exist?",
      "ResourceURLs": "http://dbpedia.org/resource/James_Bond_in_film, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 179,
      "QuestionString": "What were the names of the three ships by Columbus?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Ship, ",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 181,
      "QuestionString": "Through which countries does the Yenisei river flow?",
      "ResourceURLs": "http://dbpedia.org/resource/Yenisei_River, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 182,
      "QuestionString": "Which animals are critically endangered?",
      "ResourceURLs": "http://dbpedia.org/resource/Critically_endangered, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1503,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 183,
      "QuestionString": "Who was Tom Hanks married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Tom_Hanks, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 187,
      "QuestionString": "Who is the husband of Amanda Palmer?",
      "ResourceURLs": "http://dbpedia.org/resource/Amanda_Palmer, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Amanda_Palmer>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 188,
      "QuestionString": "Give me the homepage of Forbes.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Webiste, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 189,
      "QuestionString": "In which studio did the Beatles record their first album?",
      "ResourceURLs": "http://dbpedia.org/resource/The_Beatles, ",
      "PropertyURLs": "http://dbpedia.org/ontology/album, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/The_Beatles>   <http://dbpedia.org/ontology/album>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 190,
      "QuestionString": "Who are the parents of the wife of Juan Carlos I?",
      "ResourceURLs": "http://dbpedia.org/resource/Juan_Carlos_I_of_Spain, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Juan_Carlos_I_of_Spain>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 192,
      "QuestionString": "Which museum exhibits The Scream by Munch?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Museum, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 194,
      "QuestionString": "Which U.S. state has the abbreviation MN?",
      "ResourceURLs": "http://dbpedia.org/resource/U.S._state, ",
      "PropertyURLs": "http://dbpedia.org/ontology/college, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/U.S._state>   <http://dbpedia.org/ontology/college>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 196,
      "QuestionString": "Which classes does the Millepede belong to?",
      "ResourceURLs": "http://dbpedia.org/resource/Millipede, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 197,
      "QuestionString": "Which U.S. state has been admitted latest?",
      "ResourceURLs": "http://dbpedia.org/resource/U.S._state, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 198,
      "QuestionString": "Who was influenced by Socrates?",
      "ResourceURLs": "http://dbpedia.org/resource/Socrates, ",
      "PropertyURLs": "http://dbpedia.org/ontology/influenced, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Socrates>   <http://dbpedia.org/ontology/influenced>   ?v0.  }, ",
      "NrExpected": 22,
      "NrSystem": 5,
      "NrCorrect": 4
    },
    {
      "QuestionID": 199,
      "QuestionString": "Give me all Argentine films.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 243,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 201,
      "QuestionString": "What is the founding year of the brewery that produces Pilsner Urquell?",
      "ResourceURLs": "http://dbpedia.org/resource/Pilsner_Urquell, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Brewery, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 203,
      "QuestionString": "How did Michael Jackson die?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Jackson, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 206,
      "QuestionString": "What was the name of the famous battle in 1836 in San Antonio?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/battle, http://dbpedia.org/ontology/binomialAuthority, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/battle>   ?v1.    ?v0   <http://dbpedia.org/ontology/binomialAuthority>   ?v2.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 207,
      "QuestionString": "Which daughters of British earls died at the same place they were born at?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/BritishRoyalty, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/birthPlace>   ?p   ?v0.  }, ",
      "NrExpected": 13,
      "NrSystem": 37,
      "NrCorrect": 0
    },
    {
      "QuestionID": 209,
      "QuestionString": "Give me all taikonauts.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Astronaut, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {    { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/militaryRank>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/notableWork>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/citizenship>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/bodyDiscovered>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/deathCause>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/movement>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/majorShrine>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/board>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/significantProject>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/winsAtLPGA>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/significantDesign>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/selection>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/portrayer>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/lastAppearance>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/philosophicalSchool>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/winsAtOtherTournaments>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Astronaut>  <http://dbpedia.org/ontology/education>  <http://dbpedia.org/resource/Give_In_to_Me>.  }   }, ",
      "NrExpected": 7,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 210,
      "QuestionString": "Which monarchs of the United Kingdom were married to a German?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Monarch, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/spouse>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 32,
      "NrCorrect": 0
    },
    {
      "QuestionID": 211,
      "QuestionString": "Give me all American presidents of the last 20 years.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/President, ",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 212,
      "QuestionString": "Which companies work in the aerospace industry as well as in medicine?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 213,
      "QuestionString": "Show me all Czech movies.",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 49,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 214,
      "QuestionString": "Give me all professional skateboarders from Sweden.",
      "ResourceURLs": "http://dbpedia.org/resource/Give_In_to_Me, http://dbpedia.org/resource/Sweden, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "select * where {    { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/varietals>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/anthem>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/album>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/servingRailwayLine>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/structuralSystem>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/archipelago>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/railwayLineUsingTunnel>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/typeOfElectrification>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/currentProduction>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/railwayRollingStock>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/leaderParty>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/constructionMaterial>  <http://dbpedia.org/resource/Give_In_to_Me>.  } UNION  { <http://dbpedia.org/resource/Sweden>  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Give_In_to_Me>.  }   }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    }
  ]
}