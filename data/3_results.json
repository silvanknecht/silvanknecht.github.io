{
  "info": {
    "id": 3,
    "qanaryEval": {
    "gpr": 0.845,
    "grc": 0.139129,
    "gfm": 0.053222
  }},
  "data": [
    {
      "QuestionID": 1,
      "QuestionString": "What is the revenue of IBM?",
      "ResourceURLs": "http://dbpedia.org/resource/IBM, ",
      "PropertyURLs": "http://dbpedia.org/ontology/revenue, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/IBM>   <http://dbpedia.org/ontology/revenue>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 1
    },
    {
      "QuestionID": 4,
      "QuestionString": "Which airports are located in California, USA?",
      "ResourceURLs": "http://dbpedia.org/resource/California, http://dbpedia.org/resource/United_States, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Airport, http://dbpedia.org/ontology/locatedInArea, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 208,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 6,
      "QuestionString": "Are Taiko some kind of Japanese musical instrument?",
      "ResourceURLs": "http://dbpedia.org/resource/Taiko, http://dbpedia.org/resource/Japanese_language, http://dbpedia.org/resource/Musical_instrument, ",
      "PropertyURLs": "http://dbpedia.org/ontology/genre, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 7,
      "QuestionString": "Give me all cars that are produced in Germany.",
      "ResourceURLs": "http://dbpedia.org/resource/Germany, ",
      "PropertyURLs": "http://dbpedia.org/ontology/coach, http://dbpedia.org/ontology/result, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Automobile, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/coach>   <http://dbpedia.org/resource/Germany>.    ?v0   <http://dbpedia.org/ontology/result>   ?l0.  }, ",
      "NrExpected": 482,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 8,
      "QuestionString": "Who founded Intel?",
      "ResourceURLs": "http://dbpedia.org/resource/Intel, ",
      "PropertyURLs": "http://dbpedia.org/ontology/foundedBy, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Intel>   <http://dbpedia.org/ontology/foundedBy>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 9,
      "QuestionString": "In which city is the headquarter of Air China?",
      "ResourceURLs": "http://dbpedia.org/resource/City, http://dbpedia.org/resource/Air_China, ",
      "PropertyURLs": "http://dbpedia.org/ontology/city, http://dbpedia.org/ontology/headquarter, ",
      "OntologyURLs": "http://dbpedia.org/ontology/City, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 10,
      "QuestionString": "How many students does the Free University of Amsterdam have?",
      "ResourceURLs": "http://dbpedia.org/resource/Amsterdam, ",
      "PropertyURLs": "http://dbpedia.org/ontology/School, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 13,
      "QuestionString": "Which politicians were married to a German?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Politician, http://dbpedia.org/ontology/partner, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Politician, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Politician>.    ?v0   <http://dbpedia.org/ontology/partner>   ?v1.  }, ",
      "NrExpected": 11,
      "NrSystem": 17,
      "NrCorrect": 0
    },
    {
      "QuestionID": 14,
      "QuestionString": "Show me hiking trails in the Grand Canyon where there's no danger of flash floods.",
      "ResourceURLs": "http://dbpedia.org/resource/Hiking, http://dbpedia.org/resource/Grand_Canyon, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Mountain, http://dbpedia.org/ontology/Company, http://dbpedia.org/ontology/Band, http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/isPartOfName, ",
      "OntologyURLs": "http://dbpedia.org/ontology/ShoppingMall, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 15,
      "QuestionString": "How short is the shortest active NBA player?",
      "ResourceURLs": "http://dbpedia.org/resource/National_Basketball_Association, ",
      "PropertyURLs": "http://dbpedia.org/ontology/BasketballPlayer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 19,
      "QuestionString": "Who became president after JFK died?",
      "ResourceURLs": "http://dbpedia.org/resource/John_F._Kennedy, ",
      "PropertyURLs": "http://dbpedia.org/ontology/president, http://dbpedia.org/ontology/deathCause, ",
      "OntologyURLs": "http://dbpedia.org/ontology/President, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/John_F._Kennedy>   <http://dbpedia.org/ontology/president>   ?v0.    <http://dbpedia.org/resource/John_F._Kennedy>   <http://dbpedia.org/ontology/deathCause>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 20,
      "QuestionString": "How many calories does a baguette have?",
      "ResourceURLs": "http://dbpedia.org/resource/Baguette, ",
      "PropertyURLs": "http://dbpedia.org/ontology/approximateCalories, http://dbpedia.org/ontology/board, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Baguette>   <http://dbpedia.org/ontology/approximateCalories>   ?l0.    ?v0   <http://dbpedia.org/ontology/board>   <http://dbpedia.org/resource/Baguette>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 21,
      "QuestionString": "Who created English Wikipedia?",
      "ResourceURLs": "http://dbpedia.org/resource/English_language, http://dbpedia.org/resource/Wikipedia, ",
      "PropertyURLs": "http://dbpedia.org/ontology/date, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/English_language>   <http://dbpedia.org/ontology/date>   ?l0.   { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/operatingSystem>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/artist>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/language>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/computingPlatform>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/programmingLanguage>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/nonFictionSubject>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/mediaType>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/literaryGenre>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/gameEngine>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/originalLanguage>  <http://dbpedia.org/resource/English_language>.  } UNION  { <http://dbpedia.org/resource/Wikipedia>  <http://dbpedia.org/ontology/academicDiscipline>  <http://dbpedia.org/resource/English_language>.  }   }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 22,
      "QuestionString": "How many grand-children did Jacques Cousteau have?",
      "ResourceURLs": "http://dbpedia.org/resource/Jacques_Cousteau, ",
      "PropertyURLs": "http://dbpedia.org/ontology/child, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Jacques_Cousteau>   <http://dbpedia.org/ontology/child>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 2,
      "NrCorrect": 0
    },
    {
      "QuestionID": 23,
      "QuestionString": "Which software has been published by Mean Hamster Software?",
      "ResourceURLs": "http://dbpedia.org/resource/Mean_Hamster_Software, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Software, http://dbpedia.org/ontology/Planet/volume, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Software, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 24,
      "QuestionString": "How many emperors did China have?",
      "ResourceURLs": "http://dbpedia.org/resource/China, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 25,
      "QuestionString": "What is the longest river in China?",
      "ResourceURLs": "http://dbpedia.org/resource/China, ",
      "PropertyURLs": "http://dbpedia.org/ontology/River, ",
      "OntologyURLs": "http://dbpedia.org/ontology/River, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/River>.    <http://dbpedia.org/resource/China>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 11,
      "NrCorrect": 0
    },
    {
      "QuestionID": 26,
      "QuestionString": "What is the atmosphere of the Moon composed of?",
      "ResourceURLs": "http://dbpedia.org/resource/Moon, ",
      "PropertyURLs": "http://dbpedia.org/ontology/background, http://dbpedia.org/ontology/composer, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Moon>   <http://dbpedia.org/ontology/background>   ?l0.    <http://dbpedia.org/resource/Moon>   <http://dbpedia.org/ontology/composer>   ?v0.  }, ",
      "NrExpected": 7,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 27,
      "QuestionString": "ersatzfrage",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 17,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 29,
      "QuestionString": "Which countries in the European Union adopted the Euro?",
      "ResourceURLs": "http://dbpedia.org/resource/European_Union, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/introduced, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 45,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 31,
      "QuestionString": "Who is the mayor of Berlin?",
      "ResourceURLs": "http://dbpedia.org/resource/Mayor, http://dbpedia.org/resource/Berlin, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 32,
      "QuestionString": "What is Angela Merkel�s birth name?",
      "ResourceURLs": "http://dbpedia.org/resource/Angela_Merkel, ",
      "PropertyURLs": "http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Angela_Merkel>   <http://dbpedia.org/ontology/birthPlace>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 2,
      "NrCorrect": 0
    },
    {
      "QuestionID": 34,
      "QuestionString": "Give me all female German chancellors.",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Star, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/Star>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 27,
      "NrCorrect": 0
    },
    {
      "QuestionID": 37,
      "QuestionString": "What are the nicknames of San Francisco?",
      "ResourceURLs": "http://dbpedia.org/resource/San_Francisco, ",
      "PropertyURLs": "http://dbpedia.org/ontology/name, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/San_Francisco>   <http://dbpedia.org/ontology/name>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 38,
      "QuestionString": "Give me all Frisian islands that belong to the Netherlands.",
      "ResourceURLs": "http://dbpedia.org/resource/Netherlands, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Band, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Band>.    <http://dbpedia.org/resource/Netherlands>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 37,
      "NrCorrect": 0
    },
    {
      "QuestionID": 39,
      "QuestionString": "Which poet wrote the most books?",
      "ResourceURLs": "http://dbpedia.org/resource/Poet, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Poet, http://dbpedia.org/ontology/Book, http://dbpedia.org/ontology/Poet, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, http://dbpedia.org/ontology/Poem, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 40,
      "QuestionString": "Who were the parents of Queen Victoria?",
      "ResourceURLs": "http://dbpedia.org/resource/Victoria_(Australia), ",
      "PropertyURLs": "http://dbpedia.org/ontology/parent, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 42,
      "QuestionString": "Which countries have places with more than two caves?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/governmentCountry, http://dbpedia.org/ontology/Engine/height, http://dbpedia.org/ontology/Cave, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Cave, http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "",
      "NrExpected": 26,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 43,
      "QuestionString": "Give me the websites of companies with more than 500000 employees.",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Website, http://dbpedia.org/ontology/Company, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, http://dbpedia.org/ontology/Employer, http://dbpedia.org/ontology/Website, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Website>.    ?v1   a   <http://dbpedia.org/ontology/Company>.   { ?v0  <http://dbpedia.org/ontology/parentCompany>  ?v1.  } UNION  { ?v0  <http://dbpedia.org/ontology/owningCompany>  ?v1.  } UNION  { ?v0  <http://dbpedia.org/ontology/developer>  ?v1.  }   }, ",
      "NrExpected": 43,
      "NrSystem": 85,
      "NrCorrect": 0
    },
    {
      "QuestionID": 44,
      "QuestionString": "Which European countries have a constitutional monarchy?",
      "ResourceURLs": "http://dbpedia.org/resource/Constitutional_monarchy, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Country>.    <http://dbpedia.org/resource/Constitutional_monarchy>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 4,
      "NrSystem": 59,
      "NrCorrect": 3
    },
    {
      "QuestionID": 45,
      "QuestionString": "Where did Abraham Lincoln die?",
      "ResourceURLs": "http://dbpedia.org/resource/Abraham_Lincoln, ",
      "PropertyURLs": "http://dbpedia.org/ontology/deathCause, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Abraham_Lincoln>   <http://dbpedia.org/ontology/deathCause>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 49,
      "QuestionString": "Which frequent flyer program has the most airlines?",
      "ResourceURLs": "http://dbpedia.org/resource/Frequent-flyer_program, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Astronaut, http://dbpedia.org/ontology/Airline, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Astronaut>.    ?v1   a   <http://dbpedia.org/ontology/Airline>.    <http://dbpedia.org/resource/Frequent-flyer_program>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v1.    ?v0    <http://dbpedia.org/ontology/selection>    <http://dbpedia.org/resource/Frequent-flyer_program>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 50,
      "QuestionString": "What is the highest volcano in Africa?",
      "ResourceURLs": "http://dbpedia.org/resource/Volcano, http://dbpedia.org/resource/Africa, ",
      "PropertyURLs": "http://dbpedia.org/ontology/height, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Volcano, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Volcano>   <http://dbpedia.org/ontology/height>   ?l0.   { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/product>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/athletics>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/programmeFormat>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/campus>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/profession>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/citizenship>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/deathCause>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/movement>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/service>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/industry>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/philosophicalSchool>  <http://dbpedia.org/resource/Volcano>.  } UNION  { <http://dbpedia.org/resource/Africa>  <http://dbpedia.org/ontology/education>  <http://dbpedia.org/resource/Volcano>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 51,
      "QuestionString": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?",
      "ResourceURLs": "http://dbpedia.org/resource/Netherlands, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Film, http://dbpedia.org/ontology/Film, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 52,
      "QuestionString": "Give me all movies with Tom Cruise.",
      "ResourceURLs": "http://dbpedia.org/resource/Tom_Cruise, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Film, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "",
      "NrExpected": 26,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 56,
      "QuestionString": "How many seats does the home stadium of FC Porto have?",
      "ResourceURLs": "http://dbpedia.org/resource/FC_Porto, ",
      "PropertyURLs": "http://dbpedia.org/ontology/position, http://dbpedia.org/ontology/homeStadium, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/FC_Porto>   <http://dbpedia.org/ontology/position>   ?l0.    <http://dbpedia.org/resource/FC_Porto>   <http://dbpedia.org/ontology/homeStadium>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 59,
      "QuestionString": "Which space probes were sent into orbit around the sun?",
      "ResourceURLs": "http://dbpedia.org/resource/Orbit, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Spacecraft, http://dbpedia.org/ontology/Spacecraft, http://dbpedia.org/ontology/Star, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 19,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 60,
      "QuestionString": "Who is the governor of Texas?",
      "ResourceURLs": "http://dbpedia.org/resource/Texas, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 62,
      "QuestionString": "What is the highest place of Karakoram?",
      "ResourceURLs": "http://dbpedia.org/resource/Karakoram, ",
      "PropertyURLs": "http://dbpedia.org/ontology/highestPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Karakoram>   <http://dbpedia.org/ontology/highestPlace>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 63,
      "QuestionString": "Who was called Scarface?",
      "ResourceURLs": "http://dbpedia.org/resource/Scarface_(1983_film), ",
      "PropertyURLs": "http://dbpedia.org/ontology/alias, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Scarface_(1983_film)>   <http://dbpedia.org/ontology/alias>   ?l0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 64,
      "QuestionString": "What is the profession of Frank Herbert?",
      "ResourceURLs": "http://dbpedia.org/resource/Frank_Herbert, ",
      "PropertyURLs": "http://dbpedia.org/ontology/occupation, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Frank_Herbert>   <http://dbpedia.org/ontology/occupation>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 66,
      "QuestionString": "Which artists were born on the same date as Rachel Stevens?",
      "ResourceURLs": "http://dbpedia.org/resource/Rachel_Stevens, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Artist, http://dbpedia.org/ontology/date, http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Artist, ",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 68,
      "QuestionString": "Which country was Bill Gates born in?",
      "ResourceURLs": "http://dbpedia.org/resource/Bill_Gates, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Country, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 71,
      "QuestionString": "Give me all spacecrafts that flew to Mars.",
      "ResourceURLs": "http://dbpedia.org/resource/Mars, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Spacecraft, http://dbpedia.org/ontology/county, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Spacecraft, ",
      "SPARQLQuery": "",
      "NrExpected": 15,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 73,
      "QuestionString": "How many gold medals did Michael Phelps win at the 2008 Olympics?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Phelps, http://dbpedia.org/resource/2008_Summer_Olympics, ",
      "PropertyURLs": "http://dbpedia.org/ontology/numberOfGoldMedalsWon, http://dbpedia.org/ontology/firstWin, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 78,
      "QuestionString": "When was the De Beers company founded?",
      "ResourceURLs": "http://dbpedia.org/resource/De_Beers, ",
      "PropertyURLs": "http://dbpedia.org/ontology/foundedBy, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/De_Beers>   <http://dbpedia.org/ontology/foundedBy>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 79,
      "QuestionString": "Are there any castles in the United States?",
      "ResourceURLs": "http://dbpedia.org/resource/United_States, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Castle, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Castle>.   { ?v0  <http://dbpedia.org/ontology/location>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/city>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/district>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/region>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/commander>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/state>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/county>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/municipality>  <http://dbpedia.org/resource/United_States>.  } UNION  { ?v0  <http://dbpedia.org/ontology/keyPerson>  <http://dbpedia.org/resource/United_States>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 80,
      "QuestionString": "Give me a list of all critically endangered birds.",
      "ResourceURLs": "http://dbpedia.org/resource/Critically_endangered, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Species, ",
      "OntologyURLs": "http://dbpedia.org/ontology/List, ",
      "SPARQLQuery": "",
      "NrExpected": 198,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 81,
      "QuestionString": "Butch Otter is the governor of which U.S. state?",
      "ResourceURLs": "http://dbpedia.org/resource/List_of_Tom_and_Jerry_characters, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 82,
      "QuestionString": "When was Jack Wolfskin founded?",
      "ResourceURLs": "http://dbpedia.org/resource/Jack_Branning, http://dbpedia.org/resource/Wolfskin, ",
      "PropertyURLs": "http://dbpedia.org/ontology/foundedBy, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Jack_Branning>   <http://dbpedia.org/ontology/foundedBy>   ?v0.   { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/cpu>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/makeupArtist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/specialEffects>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/developer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/associatedMusicalArtist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/gameEngine>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/highschool>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/appointer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/recordLabel>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/owningOrganisation>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/narrator>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/vicePresident>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/mediaType>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/editing>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/musicBy>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/monarch>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/musicalBand>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/gameArtist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/voice>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/computingPlatform>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/programmingLanguage>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/translator>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/coverArtist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/firstLeader>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/commander>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/storyEditor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/photographer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/premierePlace>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/showJudge>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/president>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/discoverer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/illustrator>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/executiveProducer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/composer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/owningCompany>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/managingEditor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/designer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/costumeDesigner>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/cinematography>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/chiefEditor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/engineer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/distributor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/manufacturer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/director>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/editor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/creator>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/author>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/secondLeader>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/owner>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/setDesigner>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/writer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/compiler>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/producer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/literaryGenre>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/primeMinister>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/coExecutiveProducer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/coach>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/foundedBy>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/chairman>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/currentMember>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/painter>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/nonFictionSubject>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/creativeDirector>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/musicComposer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/channel>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/associatedBand>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/leader>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/artist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/lieutenant>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/coProducer>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/lyrics>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/associateEditor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/publisher>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/musicalArtist>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/keyPerson>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/chancellor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/operatingSystem>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/license>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/guest>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/company>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/viceChancellor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/previousEditor>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/parentCompany>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/presenter>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/productionCompany>  <http://dbpedia.org/resource/Jack_Branning>.  } UNION  { <http://dbpedia.org/resource/Wolfskin>  <http://dbpedia.org/ontology/academicDiscipline>  <http://dbpedia.org/resource/Jack_Branning>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 83,
      "QuestionString": "Give me all gangsters from the prohibition era.",
      "ResourceURLs": "http://dbpedia.org/resource/Prohibition_in_the_United_States, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Band, http://dbpedia.org/ontology/era, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 22,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 84,
      "QuestionString": "Which American presidents were in office during the Vietnam War?",
      "ResourceURLs": "http://dbpedia.org/resource/United_States, http://dbpedia.org/resource/Vietnam_War, ",
      "PropertyURLs": "http://dbpedia.org/ontology/office, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 86,
      "QuestionString": "What is the highest mountain in Germany?",
      "ResourceURLs": "http://dbpedia.org/resource/Mountain, http://dbpedia.org/resource/Germany, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Mountain, ",
      "OntologyURLs": "http://dbpedia.org/ontology/MountainRange, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Mountain>.    <http://dbpedia.org/resource/Mountain>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.   { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/mountainRange>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsMajorSector>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/waterwayThroughTunnel>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/highestMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/leftTributary>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/map>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/riverBranch>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsMainPart>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/sourceMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/majorShrine>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/residence>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/inflow>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/notableIdea>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/significantProject>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/constructionMaterial>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/river>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/lowestMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/outflow>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/mouthMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/field>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/sourceConfluence>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/crosses>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/managementMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsSubgroup>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsSupergroup>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/sourceConfluenceMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/countySeat>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/rightTributary>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/bodyDiscovered>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/archipelago>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/riverMouth>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/governmentMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsSection>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsGroup>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/portrayer>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/capitalMountain>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/hasJunctionWith>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/alpsSubsection>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/parentMountainPeak>  <http://dbpedia.org/resource/Mountain>.  } UNION  { <http://dbpedia.org/resource/Germany>  <http://dbpedia.org/ontology/riverBranchOf>  <http://dbpedia.org/resource/Mountain>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 87,
      "QuestionString": "Which book has the most pages?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Book, http://dbpedia.org/ontology/numberOfPages, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Book>.    ?v0   <http://dbpedia.org/ontology/numberOfPages>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 10000,
      "NrCorrect": 0
    },
    {
      "QuestionID": 88,
      "QuestionString": "What is the wavelength of Indigo?",
      "ResourceURLs": "http://dbpedia.org/resource/Wavelength, ",
      "PropertyURLs": "http://dbpedia.org/ontology/wavelength, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 92,
      "QuestionString": "Is the wife of President Obama called Michelle?",
      "ResourceURLs": "http://dbpedia.org/resource/Barack_Obama, http://dbpedia.org/resource/Michelle_Obama, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, http://dbpedia.org/ontology/knownFor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 94,
      "QuestionString": "When did princess Diana die?",
      "ResourceURLs": "http://dbpedia.org/resource/Diana,_Princess_of_Wales, ",
      "PropertyURLs": "http://dbpedia.org/ontology/monarch, http://dbpedia.org/ontology/flag, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 95,
      "QuestionString": "Who is the youngest player in the Premier League?",
      "ResourceURLs": "http://dbpedia.org/resource/Premier_League, ",
      "PropertyURLs": "http://dbpedia.org/ontology/participant, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Play, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 96,
      "QuestionString": "Which professional surfers were born on the Philippines?",
      "ResourceURLs": "http://dbpedia.org/resource/Philippines, ",
      "PropertyURLs": "http://dbpedia.org/ontology/class, http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/class>   <http://dbpedia.org/resource/Philippines>.    <http://dbpedia.org/resource/Philippines>   <http://dbpedia.org/ontology/birthPlace>   ?v1.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 97,
      "QuestionString": "Give me the official websites of actors of the television show Charmed.",
      "ResourceURLs": "http://dbpedia.org/resource/Charmed, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Website, http://dbpedia.org/ontology/Actor, http://dbpedia.org/ontology/TelevisionShow, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 98,
      "QuestionString": "Who killed Caesar?",
      "ResourceURLs": "http://dbpedia.org/resource/Julius_Caesar, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Comic, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 9,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 99,
      "QuestionString": "What is the time zone of Salt Lake City?",
      "ResourceURLs": "http://dbpedia.org/resource/Time_zone, http://dbpedia.org/resource/Salt_Lake_City, ",
      "PropertyURLs": "http://dbpedia.org/ontology/timeZone, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Time_zone>   <http://dbpedia.org/ontology/timeZone>   <http://dbpedia.org/resource/Salt_Lake_City>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 101,
      "QuestionString": "How many companies were founded by the founder of Facebook?",
      "ResourceURLs": "http://dbpedia.org/resource/Facebook, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Company, http://dbpedia.org/ontology/founder, http://dbpedia.org/ontology/foundedBy, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 102,
      "QuestionString": "When did Dracula's creator die?",
      "ResourceURLs": "http://dbpedia.org/resource/Dracula, ",
      "PropertyURLs": "http://dbpedia.org/ontology/creator, http://dbpedia.org/ontology/motto, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Dracula>   <http://dbpedia.org/ontology/creator>   ?v0.    <http://dbpedia.org/resource/Dracula>   <http://dbpedia.org/ontology/motto>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 103,
      "QuestionString": "Where does Piccadilly start?",
      "ResourceURLs": "http://dbpedia.org/resource/Piccadilly, ",
      "PropertyURLs": "http://dbpedia.org/ontology/routeStart, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Piccadilly>   <http://dbpedia.org/ontology/routeStart>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 104,
      "QuestionString": "Who is the daughter of Robert Kennedy married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Robert_F._Kennedy, ",
      "PropertyURLs": "http://dbpedia.org/ontology/child, http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Robert_F._Kennedy>   <http://dbpedia.org/ontology/child>   ?v0.    <http://dbpedia.org/resource/Robert_F._Kennedy>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 105,
      "QuestionString": "Which countries have more than ten volcanoes?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/governmentCountry, http://dbpedia.org/ontology/Volcano, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 13,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 107,
      "QuestionString": "Who was the father of Queen Elizabeth II?",
      "ResourceURLs": "http://dbpedia.org/resource/Elizabeth_II, http://dbpedia.org/resource/Elizabeth_II, ",
      "PropertyURLs": "http://dbpedia.org/ontology/parent, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Elizabeth_II>   <http://dbpedia.org/ontology/parent>   <http://dbpedia.org/resource/Elizabeth_II>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 108,
      "QuestionString": "When did Paraguay proclaim its independence?",
      "ResourceURLs": "http://dbpedia.org/resource/Paraguay, ",
      "PropertyURLs": "http://dbpedia.org/ontology/citizenship, http://dbpedia.org/ontology/show, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 110,
      "QuestionString": "Which movies did Kurosawa direct?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Film, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Film, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/Film>   ?p   ?v0.  }, ",
      "NrExpected": 32,
      "NrSystem": 35,
      "NrCorrect": 0
    },
    {
      "QuestionID": 111,
      "QuestionString": "How many awards has Bertrand Russell?",
      "ResourceURLs": "http://dbpedia.org/resource/Bertrand_Russell, ",
      "PropertyURLs": "http://dbpedia.org/ontology/award, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Bertrand_Russell>   <http://dbpedia.org/ontology/award>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 113,
      "QuestionString": "Which German cities have more than 250000 inhabitants?",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 26,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 114,
      "QuestionString": "How big is the earth's diameter?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/ground, http://dbpedia.org/ontology/Weapon/diameter, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 115,
      "QuestionString": "How many rivers and lakes are in South Carolina?",
      "ResourceURLs": "http://dbpedia.org/resource/South_Carolina, ",
      "PropertyURLs": "http://dbpedia.org/ontology/River, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/River>.    <http://dbpedia.org/resource/South_Carolina>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 2,
      "NrCorrect": 0
    },
    {
      "QuestionID": 116,
      "QuestionString": "Who was called Rodzilla?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/alias, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/alias>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 28,
      "NrCorrect": 0
    },
    {
      "QuestionID": 117,
      "QuestionString": "Is Pamela Anderson a vegan?",
      "ResourceURLs": "http://dbpedia.org/resource/Pamela_Anderson, http://dbpedia.org/resource/Veganism, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Sound, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 119,
      "QuestionString": "Which instruments does Cat Stevens play?",
      "ResourceURLs": "http://dbpedia.org/resource/Cat_Stevens, ",
      "PropertyURLs": "http://dbpedia.org/ontology/instrument, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Instrument, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Cat_Stevens>   <http://dbpedia.org/ontology/instrument>   ?v0.  }, ",
      "NrExpected": 10,
      "NrSystem": 10,
      "NrCorrect": 10
    },
    {
      "QuestionID": 120,
      "QuestionString": "Who is the daughter of Bill Clinton married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Bill_Clinton, ",
      "PropertyURLs": "http://dbpedia.org/ontology/child, http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Bill_Clinton>   <http://dbpedia.org/ontology/child>   ?v0.    <http://dbpedia.org/resource/Bill_Clinton>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 122,
      "QuestionString": "Who was the wife of President Lincoln?",
      "ResourceURLs": "http://dbpedia.org/resource/President_of_the_United_States, http://dbpedia.org/resource/Abraham_Lincoln, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/President_of_the_United_States>   <http://dbpedia.org/ontology/spouse>   <http://dbpedia.org/resource/Abraham_Lincoln>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 123,
      "QuestionString": "Give me all animals that are extinct.",
      "ResourceURLs": "http://dbpedia.org/resource/Extinction, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Game, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Animal, ",
      "SPARQLQuery": "",
      "NrExpected": 915,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 124,
      "QuestionString": "When was Carlo Giuliani shot?",
      "ResourceURLs": "http://dbpedia.org/resource/Death_of_Carlo_Giuliani, ",
      "PropertyURLs": "http://dbpedia.org/ontology/discharge, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Death_of_Carlo_Giuliani>   <http://dbpedia.org/ontology/discharge>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 125,
      "QuestionString": "How many years was the Ford Model T manufactured?",
      "ResourceURLs": "http://dbpedia.org/resource/Ford_Model_T, ",
      "PropertyURLs": "http://dbpedia.org/ontology/activeYearsStartYear, http://dbpedia.org/ontology/product, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Ford_Model_T>   <http://dbpedia.org/ontology/activeYearsStartYear>   ?l0.    ?v0   <http://dbpedia.org/ontology/product>   <http://dbpedia.org/resource/Ford_Model_T>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 126,
      "QuestionString": "Sean Parnell was the governor of which U.S. state?",
      "ResourceURLs": "http://dbpedia.org/resource/Sean_Parnell, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Governor, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 128,
      "QuestionString": "Who is the author of WikiLeaks?",
      "ResourceURLs": "http://dbpedia.org/resource/WikiLeaks, ",
      "PropertyURLs": "http://dbpedia.org/ontology/author, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/WikiLeaks>   <http://dbpedia.org/ontology/author>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 1
    },
    {
      "QuestionID": 129,
      "QuestionString": "Who does the voice of Bart Simpson?",
      "ResourceURLs": "http://dbpedia.org/resource/Bart_Simpson, ",
      "PropertyURLs": "http://dbpedia.org/ontology/voice, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/voice>   <http://dbpedia.org/resource/Bart_Simpson>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 131,
      "QuestionString": "What languages are spoken in Pakistan?",
      "ResourceURLs": "http://dbpedia.org/resource/Pakistan, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Language, http://dbpedia.org/ontology/spokenIn, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Language, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Language>.    ?v0   <http://dbpedia.org/ontology/spokenIn>   <http://dbpedia.org/resource/Pakistan>.  }, ",
      "NrExpected": 16,
      "NrSystem": 52,
      "NrCorrect": 9
    },
    {
      "QuestionID": 132,
      "QuestionString": "What is Elon Musk famous for?",
      "ResourceURLs": "http://dbpedia.org/resource/Elon_Musk, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 6,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 133,
      "QuestionString": "What are the names of the Teenage Mutant Ninja Turtles?",
      "ResourceURLs": "http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles, ",
      "PropertyURLs": "http://dbpedia.org/ontology/otherName, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/otherName>   ?v1.   { ?v0  <http://dbpedia.org/ontology/knownFor>  <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles>.  } UNION  { ?v0  <http://dbpedia.org/ontology/computingPlatform>  <http://dbpedia.org/resource/Teenage_Mutant_Ninja_Turtles>.  }   }, ",
      "NrExpected": 4,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 134,
      "QuestionString": "What is Batman's real name?",
      "ResourceURLs": "http://dbpedia.org/resource/Batman, ",
      "PropertyURLs": "http://dbpedia.org/ontology/ground, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Batman>   <http://dbpedia.org/ontology/ground>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 135,
      "QuestionString": "When did Michael Jackson die?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Jackson, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Single, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Single>.    <http://dbpedia.org/resource/Michael_Jackson>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 61,
      "NrCorrect": 0
    },
    {
      "QuestionID": 136,
      "QuestionString": "How many moons does Mars have?",
      "ResourceURLs": "http://dbpedia.org/resource/Natural_satellite, http://dbpedia.org/resource/Mars, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Planet, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 137,
      "QuestionString": "Give me all Dutch parties.",
      "ResourceURLs": "http://dbpedia.org/resource/Netherlands, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 11,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 138,
      "QuestionString": "Give me the capitals of all countries in Africa.",
      "ResourceURLs": "http://dbpedia.org/resource/Africa, ",
      "PropertyURLs": "http://dbpedia.org/ontology/region, http://dbpedia.org/ontology/Country, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Capital, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Country>.    <http://dbpedia.org/resource/Africa>   <http://dbpedia.org/ontology/region>   ?v0.  }, ",
      "NrExpected": 59,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 139,
      "QuestionString": "Which professional surfers were born in Australia?",
      "ResourceURLs": "http://dbpedia.org/resource/Australia, ",
      "PropertyURLs": "http://dbpedia.org/ontology/authority, http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Australia>   <http://dbpedia.org/ontology/authority>   ?v0.    ?v0   <http://dbpedia.org/ontology/birthPlace>   <http://dbpedia.org/resource/Australia>.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 140,
      "QuestionString": "How many scientists graduated from an Ivy League university?",
      "ResourceURLs": "http://dbpedia.org/resource/Ivy_League, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Scientist, http://dbpedia.org/ontology/University, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Scientist>.    ?v1   a   <http://dbpedia.org/ontology/University>.    ?v1    <http://dbpedia.org/ontology/athletics>    <http://dbpedia.org/resource/Ivy_League>.    ?v0    <http://dbpedia.org/ontology/wikiPageWikiLink>    <http://dbpedia.org/resource/Ivy_League>.  }, ",
      "NrExpected": 1,
      "NrSystem": 4,
      "NrCorrect": 0
    },
    {
      "QuestionID": 141,
      "QuestionString": "Which languages are spoken in Estonia?",
      "ResourceURLs": "http://dbpedia.org/resource/Estonia, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Language, http://dbpedia.org/ontology/spokenIn, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Language, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Language>.    ?v0   <http://dbpedia.org/ontology/spokenIn>   <http://dbpedia.org/resource/Estonia>.  }, ",
      "NrExpected": 8,
      "NrSystem": 8,
      "NrCorrect": 7
    },
    {
      "QuestionID": 143,
      "QuestionString": "What is the area code of Berlin?",
      "ResourceURLs": "http://dbpedia.org/resource/Telephone_numbering_plan, http://dbpedia.org/resource/Berlin, ",
      "PropertyURLs": "http://dbpedia.org/ontology/areaCode, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Berlin>   <http://dbpedia.org/ontology/areaCode>   ?l0.   { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/varietals>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/maintainedBy>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/waterwayThroughTunnel>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/chain>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/servingRailwayLine>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/league>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/map>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/railwayLineUsingTunnel>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/developer>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/governingBody>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/highschool>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/recordLabel>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/constructionMaterial>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/owningOrganisation>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/availableSmartCard>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/government>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/viceLeaderParty>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/operator>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/timeZone>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/associatedBand>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/contractor>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/countySeat>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/structuralSystem>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/archipelago>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/architectualBureau>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/wineProduced>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/typeOfElectrification>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/highwaySystem>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/currentProduction>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/railwayRollingStock>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/tenant>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/leaderParty>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/company>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/nrhpType>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/parentCompany>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/owningCompany>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/architecturalStyle>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/distributor>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/college>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  } UNION  { <http://dbpedia.org/resource/Berlin>  <http://dbpedia.org/ontology/manufacturer>  <http://dbpedia.org/resource/Telephone_numbering_plan>.  }   }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 144,
      "QuestionString": "Whom did Lance Bass marry?",
      "ResourceURLs": "http://dbpedia.org/resource/Lance_Bass, ",
      "PropertyURLs": "http://dbpedia.org/ontology/partner, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Lance_Bass>   <http://dbpedia.org/ontology/partner>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 145,
      "QuestionString": "Who owns Aldi?",
      "ResourceURLs": "http://dbpedia.org/resource/Aldi, ",
      "PropertyURLs": "http://dbpedia.org/ontology/subsidiary, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Aldi>   <http://dbpedia.org/ontology/subsidiary>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 148,
      "QuestionString": "What is the largest state in the United States?",
      "ResourceURLs": "http://dbpedia.org/resource/United_States, ",
      "PropertyURLs": "http://dbpedia.org/ontology/largestCity, ",
      "OntologyURLs": "http://dbpedia.org/ontology/State, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/United_States>   <http://dbpedia.org/ontology/largestCity>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 0
    },
    {
      "QuestionID": 149,
      "QuestionString": "Which U.S. state has the highest population density?",
      "ResourceURLs": "http://dbpedia.org/resource/Population_density, ",
      "PropertyURLs": "http://dbpedia.org/ontology/PopulatedPlace/populationDensity, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Population, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 150,
      "QuestionString": "In which city was the president of Montenegro born?",
      "ResourceURLs": "http://dbpedia.org/resource/City, http://dbpedia.org/resource/Montenegro, ",
      "PropertyURLs": "http://dbpedia.org/ontology/city, http://dbpedia.org/ontology/President, http://dbpedia.org/ontology/birthPlace, ",
      "OntologyURLs": "http://dbpedia.org/ontology/City, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 151,
      "QuestionString": "Give me all B-sides of the Ramones.",
      "ResourceURLs": "",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 11,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 152,
      "QuestionString": "Which beer brewing companies are located in North-Rhine Westphalia?",
      "ResourceURLs": "http://dbpedia.org/resource/Beer, http://dbpedia.org/resource/Brewing, http://dbpedia.org/resource/Westphalia, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Brewery, http://dbpedia.org/ontology/location, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Beer, ",
      "SPARQLQuery": "",
      "NrExpected": 4,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 154,
      "QuestionString": "Which books were written by Danielle Steel?",
      "ResourceURLs": "http://dbpedia.org/resource/Danielle_Steel, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Book, http://dbpedia.org/ontology/author, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Book, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Book>.    ?v0   <http://dbpedia.org/ontology/author>   <http://dbpedia.org/resource/Danielle_Steel>.  }, ",
      "NrExpected": 47,
      "NrSystem": 47,
      "NrCorrect": 47
    },
    {
      "QuestionID": 155,
      "QuestionString": "What is the nick name of Baghdad?",
      "ResourceURLs": "http://dbpedia.org/resource/Baghdad, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Station, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 156,
      "QuestionString": "Where is Fort Knox located?",
      "ResourceURLs": "http://dbpedia.org/resource/Fort_Knox, ",
      "PropertyURLs": "http://dbpedia.org/ontology/location, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Fort_Knox>   <http://dbpedia.org/ontology/location>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 2,
      "NrCorrect": 1
    },
    {
      "QuestionID": 157,
      "QuestionString": "Give me English actors starring in Lovesick.",
      "ResourceURLs": "http://dbpedia.org/resource/English_language, http://dbpedia.org/resource/Mura_Masa, ",
      "PropertyURLs": "http://dbpedia.org/ontology/starring, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/starring>   <http://dbpedia.org/resource/Mura_Masa>.    <http://dbpedia.org/resource/Mura_Masa>    <http://dbpedia.org/ontology/language>    <http://dbpedia.org/resource/English_language>.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 158,
      "QuestionString": "Give me all writers that won the Nobel Prize in literature.",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Writer, http://dbpedia.org/ontology/literaryGenre, http://dbpedia.org/ontology/institution, ",
      "OntologyURLs": "http://dbpedia.org/ontology/PeriodicalLiterature, http://dbpedia.org/ontology/Writer, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Writer>.    ?v1   <http://dbpedia.org/ontology/literaryGenre>   ?v0.    ?v2   <http://dbpedia.org/ontology/institution>   ?v1.  }, ",
      "NrExpected": 21,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 159,
      "QuestionString": "Which countries are connected by the Rhine?",
      "ResourceURLs": "http://dbpedia.org/resource/Rhine, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, http://dbpedia.org/ontology/Bridge, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Country>.   { <http://dbpedia.org/resource/Rhine>  <http://dbpedia.org/ontology/sourceCountry>  ?v0.  } UNION  { <http://dbpedia.org/resource/Rhine>  <http://dbpedia.org/ontology/mouthCountry>  ?v0.  } UNION  { <http://dbpedia.org/resource/Rhine>  <http://dbpedia.org/ontology/wikiPageWikiLink>  ?v0.  } UNION  { <http://dbpedia.org/resource/Rhine>  <http://dbpedia.org/ontology/state>  ?v0.  } UNION  { <http://dbpedia.org/resource/Rhine>  <http://dbpedia.org/ontology/country>  ?v0.  }     ?v1   a   <http://dbpedia.org/ontology/Bridge>.    <http://dbpedia.org/resource/Rhine>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v1.  }, ",
      "NrExpected": 6,
      "NrSystem": 185,
      "NrCorrect": 75
    },
    {
      "QuestionID": 160,
      "QuestionString": "Who wrote Harry Potter?",
      "ResourceURLs": "http://dbpedia.org/resource/Harry_Potter, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Language, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Language>.    <http://dbpedia.org/resource/Harry_Potter>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 14,
      "NrCorrect": 0
    },
    {
      "QuestionID": 162,
      "QuestionString": "How deep is Lake Chiemsee?",
      "ResourceURLs": "http://dbpedia.org/resource/Chiemsee, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 163,
      "QuestionString": "Give me all chemical elements.",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/ChemicalCompound, ",
      "OntologyURLs": "http://dbpedia.org/ontology/ChemicalElement, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/ChemicalCompound>   ?p   ?v0.  }, ",
      "NrExpected": 119,
      "NrSystem": 31,
      "NrCorrect": 0
    },
    {
      "QuestionID": 164,
      "QuestionString": "Who was on the Apollo 11 mission?",
      "ResourceURLs": "http://dbpedia.org/resource/Apollo_11, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 165,
      "QuestionString": "What is the name of the university where Obama's wife studied?",
      "ResourceURLs": "http://dbpedia.org/resource/Barack_Obama, ",
      "PropertyURLs": "http://dbpedia.org/ontology/University, http://dbpedia.org/ontology/spouse, http://dbpedia.org/ontology/influenced, ",
      "OntologyURLs": "http://dbpedia.org/ontology/University, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 166,
      "QuestionString": "Which computer scientist won an oscar?",
      "ResourceURLs": "http://dbpedia.org/resource/Computer_scientist, http://dbpedia.org/resource/Oscar_(fish), ",
      "PropertyURLs": "http://dbpedia.org/ontology/Scientist, http://dbpedia.org/ontology/capital, http://dbpedia.org/ontology/institution, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 167,
      "QuestionString": "Which subsidiary of TUI Travel serves both Glasgow and Dublin?",
      "ResourceURLs": "http://dbpedia.org/resource/TUI_Travel, http://dbpedia.org/resource/Glasgow, http://dbpedia.org/resource/Dublin, ",
      "PropertyURLs": "http://dbpedia.org/ontology/subsidiary, http://dbpedia.org/ontology/service, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 168,
      "QuestionString": "Which actors play in Big Bang Theory?",
      "ResourceURLs": "http://dbpedia.org/resource/Big_Bang, ",
      "PropertyURLs": "http://dbpedia.org/ontology/artist, http://dbpedia.org/ontology/Play, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Actor, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Play>.    ?v1   <http://dbpedia.org/ontology/artist>   <http://dbpedia.org/resource/Big_Bang>.   { ?v0  <http://dbpedia.org/ontology/director>  <http://dbpedia.org/resource/Big_Bang>.  } UNION  { ?v0  <http://dbpedia.org/ontology/executiveProducer>  <http://dbpedia.org/resource/Big_Bang>.  } UNION  { ?v0  <http://dbpedia.org/ontology/composer>  <http://dbpedia.org/resource/Big_Bang>.  } UNION  { ?v0  <http://dbpedia.org/ontology/premierePlace>  <http://dbpedia.org/resource/Big_Bang>.  } UNION  { ?v0  <http://dbpedia.org/ontology/producer>  <http://dbpedia.org/resource/Big_Bang>.  } UNION  { ?v0  <http://dbpedia.org/ontology/keyPerson>  <http://dbpedia.org/resource/Big_Bang>.  }   }, ",
      "NrExpected": 10,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 169,
      "QuestionString": "Give me all libraries established before 1400.",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Library, http://dbpedia.org/ontology/established, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Library, ",
      "SPARQLQuery": "",
      "NrExpected": 12,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 171,
      "QuestionString": "When did the Boston Tea Party take place?",
      "ResourceURLs": "http://dbpedia.org/resource/Boston_Tea_Party, ",
      "PropertyURLs": "http://dbpedia.org/ontology/place, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Place, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Boston_Tea_Party>   <http://dbpedia.org/ontology/place>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 173,
      "QuestionString": "When did Finland join the EU?",
      "ResourceURLs": "http://dbpedia.org/resource/Finland, http://dbpedia.org/resource/European_Union, ",
      "PropertyURLs": "http://dbpedia.org/ontology/team, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   <http://dbpedia.org/ontology/team>   <http://dbpedia.org/resource/European_Union>.    <http://dbpedia.org/resource/Finland>    <http://dbpedia.org/ontology/wikiPageWikiLink>    <http://dbpedia.org/resource/European_Union>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 174,
      "QuestionString": "Who is the novelist of the work a song of ice and fire?",
      "ResourceURLs": "http://dbpedia.org/resource/Ice, ",
      "PropertyURLs": "http://dbpedia.org/ontology/author, http://dbpedia.org/ontology/Work, http://dbpedia.org/ontology/Song, http://dbpedia.org/ontology/Work, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Work, http://dbpedia.org/ontology/Song, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 175,
      "QuestionString": "When did Muhammad die?",
      "ResourceURLs": "http://dbpedia.org/resource/Muhammad, ",
      "PropertyURLs": "http://dbpedia.org/ontology/flag, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 176,
      "QuestionString": "Who painted The Storm on the Sea of Galilee?",
      "ResourceURLs": "http://dbpedia.org/resource/Melbourne_Storm, http://dbpedia.org/resource/Galilee, ",
      "PropertyURLs": "http://dbpedia.org/ontology/picture, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Melbourne_Storm>   <http://dbpedia.org/ontology/picture>   <http://dbpedia.org/resource/Galilee>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 177,
      "QuestionString": "Which bridges are of the same type as the Manhattan Bridge?",
      "ResourceURLs": "http://dbpedia.org/resource/Manhattan_Bridge, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Bridge, http://dbpedia.org/ontology/type, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Bridge, ",
      "SPARQLQuery": "",
      "NrExpected": 160,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 178,
      "QuestionString": "How many James Bond movies do exist?",
      "ResourceURLs": "http://dbpedia.org/resource/James_Bond, ",
      "PropertyURLs": "http://dbpedia.org/ontology/time, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/James_Bond>   <http://dbpedia.org/ontology/time>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 179,
      "QuestionString": "What were the names of the three ships by Columbus?",
      "ResourceURLs": "http://dbpedia.org/resource/Christopher_Columbus, ",
      "PropertyURLs": "http://dbpedia.org/ontology/otherName, http://dbpedia.org/ontology/Ship, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Ship, ",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Christopher_Columbus>   <http://dbpedia.org/ontology/otherName>   ?v1.    ?v0   a   <http://dbpedia.org/ontology/Ship>.    <http://dbpedia.org/resource/Christopher_Columbus>    <http://dbpedia.org/ontology/wikiPageWikiLink>    ?v0.  }, ",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 181,
      "QuestionString": "Through which countries does the Yenisei river flow?",
      "ResourceURLs": "http://dbpedia.org/resource/Yenisei_River, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Country, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Country, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 182,
      "QuestionString": "Which animals are critically endangered?",
      "ResourceURLs": "http://dbpedia.org/resource/Critically_endangered, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Game, http://dbpedia.org/ontology/Species, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1503,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 183,
      "QuestionString": "Who was Tom Hanks married to?",
      "ResourceURLs": "http://dbpedia.org/resource/Tom_Hanks, ",
      "PropertyURLs": "http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Tom_Hanks>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 1,
      "NrCorrect": 1
    },
    {
      "QuestionID": 187,
      "QuestionString": "Who is the husband of Amanda Palmer?",
      "ResourceURLs": "http://dbpedia.org/resource/Amanda_Palmer, ",
      "PropertyURLs": "http://dbpedia.org/ontology/partner, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Amanda_Palmer>   <http://dbpedia.org/ontology/partner>   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 188,
      "QuestionString": "Give me the homepage of Forbes.",
      "ResourceURLs": "http://dbpedia.org/resource/Forbes, ",
      "PropertyURLs": "http://dbpedia.org/ontology/wikiPageWikiLinkText, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Webiste, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 189,
      "QuestionString": "In which studio did the Beatles record their first album?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/soundRecording, http://dbpedia.org/ontology/Album, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Album>.    ?v0   <http://dbpedia.org/ontology/soundRecording>   ?v1.  }, ",
      "NrExpected": 1,
      "NrSystem": 2015,
      "NrCorrect": 0
    },
    {
      "QuestionID": 190,
      "QuestionString": "Who are the parents of the wife of Juan Carlos I?",
      "ResourceURLs": "http://dbpedia.org/resource/Juan_Carlos_I_of_Spain, ",
      "PropertyURLs": "http://dbpedia.org/ontology/parent, http://dbpedia.org/ontology/spouse, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Juan_Carlos_I_of_Spain>   <http://dbpedia.org/ontology/parent>   ?v0.    <http://dbpedia.org/resource/Juan_Carlos_I_of_Spain>   <http://dbpedia.org/ontology/spouse>   ?v0.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 192,
      "QuestionString": "Which museum exhibits The Scream by Munch?",
      "ResourceURLs": "http://dbpedia.org/resource/Museum, http://dbpedia.org/resource/Edvard_Munch, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Museum, http://dbpedia.org/ontology/Museum, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Museum, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 194,
      "QuestionString": "Which U.S. state has the abbreviation MN?",
      "ResourceURLs": "http://dbpedia.org/resource/Minnesota, ",
      "PropertyURLs": "http://dbpedia.org/ontology/abbreviation, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Minnesota>   <http://dbpedia.org/ontology/abbreviation>   ?l0.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 196,
      "QuestionString": "Which classes does the Millepede belong to?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/GrandPrix/course, http://dbpedia.org/ontology/date, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 197,
      "QuestionString": "Which U.S. state has been admitted latest?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/profession, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/ontology/profession>   ?p   ?v0.  }, ",
      "NrExpected": 1,
      "NrSystem": 20,
      "NrCorrect": 0
    },
    {
      "QuestionID": 198,
      "QuestionString": "Who was influenced by Socrates?",
      "ResourceURLs": "http://dbpedia.org/resource/Socrates, ",
      "PropertyURLs": "http://dbpedia.org/ontology/influenced, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Socrates>   <http://dbpedia.org/ontology/influenced>   ?v0.  }, ",
      "NrExpected": 22,
      "NrSystem": 5,
      "NrCorrect": 4
    },
    {
      "QuestionID": 199,
      "QuestionString": "Give me all Argentine films.",
      "ResourceURLs": "http://dbpedia.org/resource/Argentina, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 243,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 201,
      "QuestionString": "What is the founding year of the brewery that produces Pilsner Urquell?",
      "ResourceURLs": "http://dbpedia.org/resource/Brewery, http://dbpedia.org/resource/Pilsner_Urquell, ",
      "PropertyURLs": "http://dbpedia.org/ontology/foundingYear, http://dbpedia.org/ontology/Brewery, http://dbpedia.org/ontology/production, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Brewery, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 203,
      "QuestionString": "How did Michael Jackson die?",
      "ResourceURLs": "http://dbpedia.org/resource/Michael_Jackson, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Single, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 206,
      "QuestionString": "What was the name of the famous battle in 1836 in San Antonio?",
      "ResourceURLs": "http://dbpedia.org/resource/Battle, http://dbpedia.org/resource/San_Antonio, ",
      "PropertyURLs": "http://dbpedia.org/ontology/battle, ",
      "OntologyURLs": "",
      "SPARQLQuery": "select * where {     <http://dbpedia.org/resource/Battle>   <http://dbpedia.org/ontology/battle>   ?v0.    <http://dbpedia.org/resource/San_Antonio>    <http://dbpedia.org/ontology/servingRailwayLine>    <http://dbpedia.org/resource/Battle>.  }, ",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 207,
      "QuestionString": "Which daughters of British earls died at the same place they were born at?",
      "ResourceURLs": "",
      "PropertyURLs": "http://dbpedia.org/ontology/Architect, http://dbpedia.org/ontology/place, http://dbpedia.org/ontology/Noble, http://dbpedia.org/ontology/Noble, ",
      "OntologyURLs": "http://dbpedia.org/ontology/BritishRoyalty, ",
      "SPARQLQuery": "",
      "NrExpected": 13,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 209,
      "QuestionString": "Give me all taikonauts.",
      "ResourceURLs": "http://dbpedia.org/resource/Astronaut, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Spacecraft, ",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 7,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 210,
      "QuestionString": "Which monarchs of the United Kingdom were married to a German?",
      "ResourceURLs": "http://dbpedia.org/resource/United_Kingdom, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Monarch, http://dbpedia.org/ontology/Single, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Monarch, ",
      "SPARQLQuery": "",
      "NrExpected": 1,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 211,
      "QuestionString": "Give me all American presidents of the last 20 years.",
      "ResourceURLs": "http://dbpedia.org/resource/United_States, ",
      "PropertyURLs": "",
      "OntologyURLs": "http://dbpedia.org/ontology/President, ",
      "SPARQLQuery": "",
      "NrExpected": 3,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 212,
      "QuestionString": "Which companies work in the aerospace industry as well as in medicine?",
      "ResourceURLs": "http://dbpedia.org/resource/Aerospace_manufacturer, http://dbpedia.org/resource/Medicine, ",
      "PropertyURLs": "http://dbpedia.org/ontology/party, http://dbpedia.org/ontology/industry, http://dbpedia.org/ontology/Drug, http://dbpedia.org/ontology/Work, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Company, ",
      "SPARQLQuery": "",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 213,
      "QuestionString": "Show me all Czech movies.",
      "ResourceURLs": "http://dbpedia.org/resource/Czech_Republic, ",
      "PropertyURLs": "",
      "OntologyURLs": "",
      "SPARQLQuery": "",
      "NrExpected": 49,
      "NrSystem": 0,
      "NrCorrect": 0
    },
    {
      "QuestionID": 214,
      "QuestionString": "Give me all professional skateboarders from Sweden.",
      "ResourceURLs": "http://dbpedia.org/resource/Sweden, ",
      "PropertyURLs": "http://dbpedia.org/ontology/Skater, ",
      "OntologyURLs": "http://dbpedia.org/ontology/Profession, ",
      "SPARQLQuery": "select * where {     ?v0   a   <http://dbpedia.org/ontology/Skater>.    ?v0    <http://dbpedia.org/ontology/location>    <http://dbpedia.org/resource/Sweden>.  }, ",
      "NrExpected": 2,
      "NrSystem": 0,
      "NrCorrect": 0
    }
  ]
}
